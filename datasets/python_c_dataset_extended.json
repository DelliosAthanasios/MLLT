[
  {
    "python": "\"\"\"\nThis is a \nmulti-line comment in Python\n\"\"\"\nprint(\"Comments are ignored by the interpreter.\")",
    "c": "// This is a single-line comment in C\n\n/*\nThis is a\nmulti-line comment in C\n*/\n#include <stdio.h>\n\nint main() {\n    printf(\"Comments are ignored by the compiler.\\n\");\n    return 0;\n}"
  },
  {
    "python": "x = 10\ny = 5.5\nname = \"Alice\"\nprint(x, y, name)",
    "c": "#include <stdio.h>\n\nint main() {\n    int x = 10;\n    float y = 5.5;\n    char name[] = \"Alice\";\n\n    printf(\"%d %.1f %s\\n\", x, y, name);\n    return 0;\n}"
  },
  {
    "python": "a = 5         # Integer\nb = 3.14      # Float\nc = \"hello\"   # String\nd = True      # Boolean\n\nprint(type(a), type(b), type(c), type(d))",
    "c": "#include <stdio.h>\n#include <stdbool.h>\n\nint main() {\n    int a = 5;\n    float b = 3.14f;\n    char c[] = \"hello\";\n    bool d = true;\n\n    printf(\"int: %d\\nfloat: %.2f\\nstring: %s\\nbool: %d\\n\", a, b, c, d);\n    return 0;\n}"
  },
  {
    "python": "PI = 3.14159  # Python doesn't have true constants, but uppercase is a convention\nprint(\"Value of PI:\", PI)",
    "c": "#include <stdio.h>\n\n#define PI 3.14159  // Preprocessor constant\n\nint main() {\n    const int DAYS_IN_WEEK = 7;  // Constant variable\n    printf(\"PI: %.5f\\nDays in a week: %d\\n\", PI, DAYS_IN_WEEK);\n    return 0;\n}"
  },
  {
    "python": "print(\"Hello, World!\")",
    "c": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello, World!\\n\");\n    return 0;\n}"
  },
  {
    "python": "# For loop example\nfor i in range(5):\n    print(i)",
    "c": "#include <stdio.h>\n\nint main() {\n    for (int i = 0; i < 5; i++) {\n        printf(\"%d\\n\", i);\n    }\n    return 0;\n}"
  },
  {
    "python": "# While loop example\ntotal = 0\nn = 1\nwhile n <= 5:\n    total += n\n    n += 1\nprint(\"Sum:\", total)",
    "c": "#include <stdio.h>\n\nint main() {\n    int total = 0;\n    int n = 1;\n    while (n <= 5) {\n        total += n;\n        n += 1;\n    }\n    printf(\"Sum: %d\\n\", total);\n    return 0;\n}"
  },
  {
    "python": "# Conditional example\nnum = 7\nif num % 2 == 0:\n    print(\"Even\")\nelse:\n    print(\"Odd\")",
    "c": "#include <stdio.h>\n\nint main() {\n    int num = 7;\n    if (num % 2 == 0) {\n        printf(\"Even\\n\");\n    } else {\n        printf(\"Odd\\n\");\n    }\n    return 0;\n}"
  },
  {
    "python": "# Function example\ndef add(a, b):\n    return a + b\n\nprint(add(3, 4))",
    "c": "#include <stdio.h>\n\nint add(int a, int b) {\n    return a + b;\n}\n\nint main() {\n    printf(\"%d\\n\", add(3, 4));\n    return 0;\n}"
  },
  {
    "python": "# List and average\nnumbers = [1, 2, 3, 4, 5]\navg = sum(numbers) / len(numbers)\nprint(\"Average:\", avg)",
    "c": "#include <stdio.h>\n\nint main() {\n    int numbers[] = {1, 2, 3, 4, 5};\n    int length = sizeof(numbers) / sizeof(numbers[0]);\n    int sum = 0;\n    for (int i = 0; i < length; i++) {\n        sum += numbers[i];\n    }\n    double avg = (double)sum / length;\n    printf(\"Average: %.2f\\n\", avg);\n    return 0;\n}"
  },
  {
    "python": "# Dictionary iteration\nages = {\"Alice\": 25, \"Bob\": 30}\nfor name, age in ages.items():\n    print(name, age)",
    "c": "#include <stdio.h>\n\ntypedef struct {\n    const char* name;\n    int age;\n} Person;\n\nint main() {\n    Person people[] = {{\"Alice\", 25}, {\"Bob\", 30}};\n    int size = sizeof(people) / sizeof(people[0]);\n    for (int i = 0; i < size; i++) {\n        printf(\"%s %d\\n\", people[i].name, people[i].age);\n    }\n    return 0;\n}"
  },
  {
    "python": "# Exception handling\ntry:\n    result = 10 / 0\nexcept ZeroDivisionError:\n    result = None\nprint(\"Result:\", result)",
    "c": "#include <stdio.h>\n\nint main() {\n    int denominator = 0;\n    if (denominator == 0) {\n        printf(\"Error: division by zero\\n\");\n        return 1;\n    }\n    double result = 10.0 / denominator;\n    printf(\"Result: %f\\n\", result);\n    return 0;\n}"
  },
  {
    "python": "# List comprehension\nsquares = [x * x for x in range(6)]\nprint(squares)",
    "c": "#include <stdio.h>\n\nint main() {\n    int squares[6];\n    for (int i = 0; i < 6; i++) {\n        squares[i] = i * i;\n    }\n    for (int i = 0; i < 6; i++) {\n        printf(\"%d \", squares[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}"
  },
  {
    "python": "# Recursive factorial\ndef factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)\n\nprint(factorial(5))",
    "c": "#include <stdio.h>\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    printf(\"%d\\n\", factorial(5));\n    return 0;\n}"
  },
  {
    "python": "# Class definition\nclass Person:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\np = Person(\"Charlie\", 28)\nprint(p.name, p.age)",
    "c": "#include <stdio.h>\n#include <string.h>\n\ntypedef struct {\n    char name[50];\n    int age;\n} Person;\n\nint main() {\n    Person p;\n    strcpy(p.name, \"Charlie\");\n    p.age = 28;\n    printf(\"%s %d\\n\", p.name, p.age);\n    return 0;\n}"
  }
]
